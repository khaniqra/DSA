/*Implement Merge Sort to sort the given list of numbers using divide-and-conquer strategy
and verify the time complexity.
*/

#include <stdio.h>
#include <stdlib.h>

//dry run needed
void merge(int arr[], int l, int m, int r)
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 = r - m;
    int L[n1], R[n2];
    for (i = 0; i < n1; i++)
        L[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[m + 1 + j];
    i = 0; 
    j = 0; 
    k = l; 
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        }
        else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }
    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}
  
void mergeSort(int arr[], int l, int r)
{
    if (l < r) {
        int m = l + (r - l) / 2;//for middle element
        mergeSort(arr, l, m);//sorting array in two parts
        mergeSort(arr, m + 1, r);
        merge(arr, l, m, r);//merging back sorted array
    }
}
  
void printArray(int A[], int n)
{
    int i;
    for (i = 0; i < n; i++)
        printf("%d ", A[i]);
    printf("\n");
}
  
int main()
{
    int arr[100],n;
    int arr_size = sizeof(arr) / sizeof(arr[0]);//to get no of elemnets in array
    printf("Enter the size of array:\n");
    scanf("%d", &n);
    printf("Enter the elements of the array:\n");
    for(int i=0; i<n; i++)
    {
        scanf("%d", &arr[i]);
    }
    printf("Given array is \n");
    printArray(arr, n);
  
    mergeSort(arr, 0, n - 1);
  
    printf("\nSorted array is \n");
    printArray(arr, n);
    return 0;
}
